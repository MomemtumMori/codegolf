Write the shortest program that prints the entire lyrics of \"Never Gonna Give You Up\" by Rick Astley.\r\n\r\nRules:\r\n\r\nMust output the lyrics exactly as they appear in the above pastebin. Here's the raw dump: http://pastebin.com/raw.php?i=wwvdjvEj\r\nCannot rely on any external resources - all lyrics must be generated by / embedded in code.\r\nNo use of existing compression algorithms (e.g. gzip / bzip2) unless you include the full algorithm in your code.\r\nUse any language, shortest code wins.\r\nUpdate, 1st June 2012:\r\nFor solutions containing non-ASCII text, the size of your solution will be counted in bytes, based on UTF-8 encoding. If you use codepoints that cannot be encoded in UTF-8, your solution will not be judged as valid.\r\n\r\nUpdate, 7th June 2012:\r\nThank you all for your awesome solutions! I'll be accepting the shortest answer tomorrow afternoon. Right now, Ed H.'s 554-character solution is winning, so get cracking on some improvements if you want to beat him! :)Let's try to golf this piece of ascii-art representing a golfing man:\r\n\r\n\r\n      '\\                   .  .                        |>18>>\r\n        \\              .         ' .                   |\r\n       O>>         .                 'o                |\r\n        \\       .                                      |\r\n        /\\    .                                        |\r\n       / /  .'                                         |\r\n jgs^^^^^^^`^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nSource: JGS - http://www.retrojunkie.com/asciiart/sports/golf.htm\r\n\r\nRules:\r\n\r\nNo input allowed\r\nNo external resources allowed\r\nThe output must be exactly this text, displayed in a monospace font (OS console, JS console, HTML <pre> tag, ...), including the leading and trailing line-break.\r\nSurrounding quotes or double-quotes are allowed (the JS console adds double quotes when you output a string, this is okay)\r\nThe best answer will be the one using the less characters in any language.\r\n\r\nHave fun!This question has been spreading like a virus in my office. There are quite a variety of approaches:\r\n\r\nPrint the following:\r\n\r\n        1\r\n       121\r\n      12321\r\n     1234321\r\n    123454321\r\n   12345654321\r\n  1234567654321\r\n 123456787654321\r\n12345678987654321\r\n 123456787654321\r\n  1234567654321\r\n   12345654321\r\n    123454321\r\n     1234321\r\n      12321\r\n       121\r\n        1The program must print the alphabet four times: first in the normal alphabetical order, second in the order of a qwerty keyboard, third in the order of a dvorak keyboard, and lastly in reverse alphabetical order. The output should resemble this:\r\n\r\nabcdefghijklmnopqrstuvwxyz\r\nqwertyuiopasdfghjklzxcvbnm\r\npyfgcrlaoeuidhtnsqjkxbmwvz\r\nzyxwvutsrqponmlkjihgfedcba\r\nThe output is not case-sensitive, and you can add or omit newlines or spaces wherever you wish.\r\n\r\nThe catch: the program must be less than 104 characters, or, in other words, smaller than the length of the alphabet times four.\r\n\r\nI will accept the answer with the shortest code, unless I see something really clever or interesting that I am more impressed with.\r\n\r\nEDIT: I will accept the shortest answer on Wednesday, 4/27/2011.\r\n\r\nEDIT2: And the winner is (as usual) Golfscript in 64 chars! Second place, which is behind by only three chars, is also in Golfscript, with 67 chars, followed by Bash in third place with 72 chars.\r\n\r\nBut there were a few others I wanted to mention, such as this one, which, depending on your definition, only used 52 \"characters\", and this one where he wrote it in a language he created.\r\n\r\nThere were a few people who broke an unwritten rule and did not qualify, but I will mention them just for their way of thinking without the box.Create a function in your chosen language that prints out the following:\r\n\r\nOld MacDonald had a farm, E-I-E-I-O,\r\nAnd on that farm he had a cow, E-I-E-I-O,\r\nWith a moo moo here and a moo moo there,\r\nHere a moo, there a moo, everywhere a moo moo,\r\nOld MacDonald had a farm, E-I-E-I-O!\r\nWhere cow and moo are strings in the function parameters, and as such, can be changed to pig and oink or sheep and baa, for example.\r\n\r\nIt should take into account capital letters, hyphens, punctuation, spaces and line breaks.\r\n\r\nAim to type the fewest amount of Unicode characters in your code.In as few Unicode characters as possible, print the following (144 characters):\r\n\r\n1, 2, 3 o'clock, 4 o'clock rock,\r\n5, 6, 7 o'clock, 8 o'clock rock,\r\n9, 10, 11 o'clock, 12 o'clock rock,\r\nWe're gonna rock around the clock tonight.\r\nYou must not use any numbers in your code, except the digit 1.Challenge: Produce the following output using as few chars as possible:\r\n\r\n _   _      _ _                             _     _ _\r\n| | | | ___| | | ___    __      _____  _ __| | __| | |\r\n| |_| |/ _ \\ | |/ _ \\   \\ \\ /\\ / / _ \\| '__| |/ _` | |\r\n|  _  |  __/ | | (_) |   \\ V  V / (_) | |  | | (_| |_|\r\n|_| |_|\\___|_|_|\\___( )   \\_/\\_/ \\___/|_|  |_|\\__,_(_)\r\n                    |/\r\nRules and restrictions:\r\n\r\nYou may not use FIGLet or any similar tools. (Otherwise, figlet Hello, world! would be a trivial and pretty much unbeatable solution.)\r\n\r\nYour program must consist entirely of printable ASCII characters \u2014 specifically, code points 9 (TAB), 10 (LF) and 32 \u2013 126. (If your language / OS requires CRLF line breaks, you may use those instead of plain LFs.) Yes, this regrettably disqualifies any language that requires non-ASCII characters (or non-textual data) as part of its syntax.\r\n\r\nThe output must look exactly like the example above. You may, however, include extra whitespace around the output if you want. You may assume 8-character tab spacing (or your chosen platform's native default setting, if it has a consistent one).\r\n\r\nPs. To set the par, I came up with a 199-char Perl solution. I won't post it yet, though, in case someone comes up with it independently. (Also, it's kind of cheesy.) Of course, this shouldn't discourage you from posting your own solution, even if it's longer.\r\n\r\nUpdate: Now that han has beaten it by one char, here's my cheesy 199-char Perl solution:\r\n\r\nuse Compress'Zlib;say uncompress unpack u,'M>-I]BT$*`S$,`^]YQ=R:0,&_Z<DP?8@?WVQJ]E2J\"%E$$@)R(/(/MCJ*\\U!OM`Z#=5`4Y>6M=L\\L%DMP&DB0V.4GQL&OOGB$4:%`4TT4!R8O-Z(^BTZWNV?>F86K:9+\"\"-35*-LNC:T^D:_$#%^`\";\"DD0'\r\nIt's very similar to D C's solution (and all the other zlib/gzip-based solutions in various languages), except that I used uuencoding instead of base64 for the compressed text and a few other minor golfing tricks.\r\n\r\nUpdate 2: I think it's time to officially accept a winner. The first place goes to konsolenfreddy's PHP code, since, however you count the chars, it is the shortest submitted so far. In fact, combining it with the optimized DEFLATE stream from my 199-char Perl code yields an even shorter 176-char solution:\r\n\r\n<?=gzinflate(base64_decode(\"fYtBCgMxDAPvecXcmkDBv+nJMH2IH99savZUqghZRBICciDyD7Y6ivNQbwOg3VQFOXlrXbPLBZLcBpIkNjlJ8bBr754hFGhQFNNFAcmLzeiPotOt7tn3plq2mSwgjU1SjbLo2tPpGvxAxfgA\"));\r\nHowever, I do think that han deserves a special honorary mention for getting so close without using any pre-written decompression tools. Congratulations to both of you, and a happy new year to everyone!I don't know who coined these words, and I'm not Irish, but I give you an Irish blessing:\r\n\r\nMay the road rise up to meet you\r\nMay the wind be always at your back\r\nMay the sun shine warm upon your face\r\nThe rains fall soft upon your fields\r\nAnd until we meet again\r\nMay God hold you in the hollow of His hand\r\nI was planning on posting this a few weeks from now, but it just dawned on me that yesterday was Saint Patrick's Day.\r\n\r\nRules:\r\n\r\nProduce the above text exactly.\r\n(Feel free to break this rule for the sake of cleverness and amusement.)\r\nThe program must generate the text on its own accord.  cat is not a valid solution.\r\nThe solution with the fewest characters \"wins\".\r\nI saw slight variations in wording among versions of the blessing I obtained from the Internet, so I tried to average them out. Please use the version posted above. Also, I dropped the punctuation to make it a bit easier.\r\n\r\nMay the luck of the Irish enfold you.Your goal is to write a program that prints the following poem exactly as it appears here:\r\n\r\nThere was an old lady who swallowed a fly.  \r\nI don't know why she swallowed that fly,  \r\nPerhaps she'll die.\r\n\r\nThere was an old lady who swallowed a spider,  \r\nThat wriggled and iggled and jiggled inside her.  \r\nShe swallowed the spider to catch the fly,  \r\nI don't know why she swallowed that fly,  \r\nPerhaps she'll die.\r\n\r\nThere was an old lady who swallowed a bird,  \r\nHow absurd to swallow a bird.  \r\nShe swallowed the bird to catch the spider,  \r\nShe swallowed the spider to catch the fly,  \r\nI don't know why she swallowed that fly,  \r\nPerhaps she'll die.\r\n\r\nThere was an old lady who swallowed a cat,  \r\nImagine that to swallow a cat.  \r\nShe swallowed the cat to catch the bird,  \r\nShe swallowed the bird to catch the spider,  \r\nShe swallowed the spider to catch the fly,  \r\nI don't know why she swallowed that fly,  \r\nPerhaps she'll die.\r\n\r\nThere was an old lady who swallowed a dog,  \r\nWhat a hog to swallow a dog.  \r\nShe swallowed the dog to catch the cat,  \r\nShe swallowed the cat to catch the bird,  \r\nShe swallowed the bird to catch the spider,  \r\nShe swallowed the spider to catch the fly,  \r\nI don't know why she swallowed that fly,  \r\nPerhaps she'll die.\r\n\r\nThere was an old lady who swallowed a horse,  \r\nShe died of course.\r\nThe text must appear exactly as it does here, and fewest characters wins.\r\n\r\nEdit: Your program may not access the internet.Your program must print out the Gettysburg Address.\r\n\r\nI copied this text from Wikipedia:\r\n\r\nFour score and seven years ago our fathers brought forth on this continent a new nation, conceived in liberty, and dedicated to the proposition that all men are created equal. Now we are engaged in a great civil war, testing whether that nation, or any nation so conceived and so dedicated, can long endure. We are met on a great battlefield of that war. We have come to dedicate a portion of that field, as a final resting place for those who here gave their lives that that nation might live. It is altogether fitting and proper that we should do this. But, in a larger sense, we can not dedicate, we can not consecrate, we can not hallow this ground. The brave men, living and dead, who struggled here, have consecrated it, far above our poor power to add or detract. The world will little note, nor long remember what we say here, but it can never forget what they did here. It is for us the living, rather, to be dedicated here to the unfinished work which they who fought here have thus far so nobly advanced. It is rather for us to be here dedicated to the great task remaining before us\u2014that from these honored dead we take increased devotion to that cause for which they gave the last full measure of devotion\u2014that we here highly resolve that these dead shall not have died in vain\u2014that this nation, under God, shall have a new birth of freedom\u2014and that government of the people, by the people, for the people, shall not perish from the earth.\r\nThere are two different tests:\r\n\r\nYou may use system decompression software\r\nNo using system decompression software\r\nAdditionally, none of the words in the Address can appear in plain text in your code (with a non-alpha character before and after). Shortest code wins. Good luck!
